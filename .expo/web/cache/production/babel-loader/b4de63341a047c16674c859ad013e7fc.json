{"ast":null,"code":"import _objectSpread from\"@babel/runtime/helpers/objectSpread2\";import UIManager from\"../../exports/UIManager\";import createDOMProps from\"../createDOMProps\";import useStable from\"../useStable\";import{useRef}from'react';var didWarn=false;var emptyObject={};function setNativeProps(node,nativeProps,pointerEvents,style,previousStyleRef){if(!didWarn){console.warn('setNativeProps is deprecated. Please update props using React state instead.');didWarn=true;}if(node!=null&&nativeProps){var domProps=createDOMProps(null,_objectSpread(_objectSpread({pointerEvents:pointerEvents},nativeProps),{},{style:[style,nativeProps.style]}));var nextDomStyle=domProps.style;if(previousStyleRef.current!=null){if(domProps.style==null){domProps.style={};}for(var styleName in previousStyleRef.current){if(domProps.style[styleName]==null){domProps.style[styleName]='';}}}previousStyleRef.current=nextDomStyle;UIManager.updateView(node,domProps);}}export default function usePlatformMethods(_ref){var pointerEvents=_ref.pointerEvents,style=_ref.style;var previousStyleRef=useRef(null);var setNativePropsArgsRef=useRef(null);setNativePropsArgsRef.current={pointerEvents:pointerEvents,style:style};var ref=useStable(function(){return function(hostNode){if(hostNode!=null){hostNode.measure=function(callback){return UIManager.measure(hostNode,callback);};hostNode.measureLayout=function(relativeToNode,success,failure){return UIManager.measureLayout(hostNode,relativeToNode,failure,success);};hostNode.measureInWindow=function(callback){return UIManager.measureInWindow(hostNode,callback);};hostNode.setNativeProps=function(nativeProps){var _ref2=setNativePropsArgsRef.current||emptyObject,style=_ref2.style,pointerEvents=_ref2.pointerEvents;setNativeProps(hostNode,nativeProps,pointerEvents,style,previousStyleRef);};}};});return ref;}","map":{"version":3,"sources":["/Users/enrong/Owned/Driver-Expo-Git/Driver-Web-Deploy/node_modules/react-native-web/dist/modules/usePlatformMethods/index.js"],"names":["_objectSpread","UIManager","createDOMProps","useStable","useRef","didWarn","emptyObject","setNativeProps","node","nativeProps","pointerEvents","style","previousStyleRef","console","warn","domProps","nextDomStyle","current","styleName","updateView","usePlatformMethods","_ref","setNativePropsArgsRef","ref","hostNode","measure","callback","measureLayout","relativeToNode","success","failure","measureInWindow","_ref2"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport UIManager from '../../exports/UIManager';\nimport createDOMProps from '../createDOMProps';\nimport useStable from '../useStable';\nimport { useRef } from 'react';\nvar didWarn = false;\nvar emptyObject = {};\n\nfunction setNativeProps(node, nativeProps, pointerEvents, style, previousStyleRef) {\n  if (!didWarn) {\n    console.warn('setNativeProps is deprecated. Please update props using React state instead.');\n    didWarn = true;\n  }\n\n  if (node != null && nativeProps) {\n    var domProps = createDOMProps(null, _objectSpread(_objectSpread({\n      pointerEvents: pointerEvents\n    }, nativeProps), {}, {\n      style: [style, nativeProps.style]\n    }));\n    var nextDomStyle = domProps.style;\n\n    if (previousStyleRef.current != null) {\n      if (domProps.style == null) {\n        domProps.style = {};\n      }\n\n      for (var styleName in previousStyleRef.current) {\n        if (domProps.style[styleName] == null) {\n          domProps.style[styleName] = '';\n        }\n      }\n    }\n\n    previousStyleRef.current = nextDomStyle;\n    UIManager.updateView(node, domProps);\n  }\n}\n/**\n * Adds non-standard methods to the hode element. This is temporarily until an\n * API like `ReactNative.measure(hostRef, callback)` is added to React Native.\n */\n\n\nexport default function usePlatformMethods(_ref) {\n  var pointerEvents = _ref.pointerEvents,\n      style = _ref.style;\n  var previousStyleRef = useRef(null);\n  var setNativePropsArgsRef = useRef(null);\n  setNativePropsArgsRef.current = {\n    pointerEvents: pointerEvents,\n    style: style\n  }; // Avoid creating a new ref on every render. The props only need to be\n  // available to 'setNativeProps' when it is called.\n\n  var ref = useStable(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.measure = function (callback) {\n          return UIManager.measure(hostNode, callback);\n        };\n\n        hostNode.measureLayout = function (relativeToNode, success, failure) {\n          return UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n        };\n\n        hostNode.measureInWindow = function (callback) {\n          return UIManager.measureInWindow(hostNode, callback);\n        };\n\n        hostNode.setNativeProps = function (nativeProps) {\n          var _ref2 = setNativePropsArgsRef.current || emptyObject,\n              style = _ref2.style,\n              pointerEvents = _ref2.pointerEvents;\n\n          setNativeProps(hostNode, nativeProps, pointerEvents, style, previousStyleRef);\n        };\n      }\n    };\n  });\n  return ref;\n}"]},"metadata":{},"sourceType":"module"}